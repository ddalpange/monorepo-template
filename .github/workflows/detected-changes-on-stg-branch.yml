# name: "ðŸš€ Deploy Stg"
# on:
#   push:
#     tags: ["stg"]

# jobs:
#   deploy-app:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         node-version: ["16.x"]
#     steps:
#       - name: Checkout branch
#         uses: actions/checkout@v2
#         with:
#           fetch-depth: 0
#       - name: Setup Node
#         uses: actions/setup-node@v2
#         with:
#           node-version: ${{ matrix.node-version }}
#       - name: Get Cache Variables
#         id: cache-variables
#         run: |
#           echo "::set-output name=YARN_CACHE_DIR::$(yarn config get cacheFolder)"
#           echo "::set-output name=PKG_LATEST_GIT_COMMIT::$(git log -1 --format=format:'%H' packages)"
#       - name: Caching Node Module and Yarn Cache
#         uses: actions/cache@v2
#         id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
#         with:
#           path: |
#             ${{ steps.cache-variables.outputs.YARN_CACHE_DIR }}
#             **/node_modules
#           key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
#           restore-keys: |
#             ${{ runner.os }}-yarn-
#       - name: Install NPM Packages
#         if: steps.yarn-cache.outputs.cache-hit != 'true'
#         run: yarn install
#       - name: Caching Monorepo Package Outputs
#         uses: actions/cache@v2
#         id: lib-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
#         with:
#           path: |
#             **/packages/**/lib
#           key: ${{ runner.os }}-lib-${{ steps.cache-variables.outputs.PKG_LATEST_GIT_COMMIT }}
#           restore-keys: |
#             ${{ runner.os }}-lib-
#       - name: Build Monorepo Packages
#         if: steps.lib-cache.outputs.cache-hit != 'true'
#         run: |
#           yarn build:packages
#       - name: Deploy app to vercel
#         uses: amondnet/vercel-action@v20
#         with:
#           scope: riiid
#           vercel-args: "--prod"
#           vercel-token: ${{ secrets.VERCEL_TOKEN }}
#           github-token: ${{ secrets.GITHUB_TOKEN }}
#           vercel-project-id: ""
#           vercel-org-id: ""
#           # Root Directory and check `Include source files outside of the Root Directory in the Build Step.`
#           # working-directory: ./apps/portal